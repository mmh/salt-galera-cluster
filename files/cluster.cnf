{%- set env_name = salt['grains.get']('environment') %}
{%- set ipaddress = [] %} 
{%- set hosts = salt['mine.get']('G@roles:db and G@environment:{}'.format(env_name), 'network.ip_addrs', 'compound') %}
{%- for id, ips in hosts.iteritems() %} 
  {% do ipaddress.append(ips[0]) %} 
{%- endfor %} 
{%- set bootstrap_ip = salt['mine.get']('G@roles:db_bootstrap and G@environment:{}'.format(env_name), 'network.ip_addrs', 'compound').values()[0][0] %}
{%- do ipaddress.append(bootstrap_ip) %}
{%- set ipaddress = ",".join(ipaddress) %}
#### Generated by Salt ####
[mysqld]

#####InnoDB Settings######
#Set to 60% of the total memory. Per documentation: http://dev.mysql.com/doc/refman/5.6/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size
innodb_buffer_pool_size= {{ (grains['mem_total'] * 0.60)|int }}M
innodb_flush_log_at_trx_commit=1
innodb_file_per_table=1
innodb_autoinc_lock_mode=2
innodb_log_file_size = 64M

# Other settings
wait_timeout = 1800
max_allowed_packet  = 64M

performance_schema=0
server_id={{ grains['server_id'] }}
binlog_format=ROW
expire-logs-days=7
default-storage-engine=innodb
query_cache_type=0
query_cache_size=0
bind-address=0.0.0.0
#Max connections is set to 100 * The number of CPUS the VM has
max_connections= {{ grains['num_cpus'] * 100 }}

# Galera Provider Configuration 
wsrep_on=ON
wsrep_provider=/usr/lib/galera/libgalera_smm.so
{%- if grains['mem_total'] <= 2048 %}
wsrep_provider_options="gcache.size=200M" 
{%- else %}
wsrep_provider_options="gcache.size=1G"
{%- endif %}

#Galera Cluster Configuration
wsrep_cluster_name="Galera_MariaDB"
wsrep_cluster_address="gcomm://{{ ipaddress }}"

# Galera Synchronization Configuration 
wsrep_sst_method=rsync

#The number of slave threads has been optimized to be the number of cpus.
wsrep_slave_threads={{ grains['num_cpus'] }}

# Galera Node Configuration
wsrep_node_address="{{ salt['mine.get'](grains['id'], 'network.ip_addrs').values()[0][0] }}"
wsrep_node_name="{{ grains['fqdn'] }}"
